name: CMake on a single platform

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Conan Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('conanfile.py') }}
          restore-keys: |
            ${{ runner.os }}-conan-

      - name: Setup Conan Package Manager
        uses: jwidauer/setup-conan@v1

      - name: Set up Clang v20 Compiler
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20 all

      - name: Print Environment Details
        run: |
          echo ${{github.workspace}}
          echo ${{env.BUILD_TYPE}}
          which clang-20
          which clang++-20
          which clang-format-20
          which clang-tidy-20
          conan --version
          cmake --version

      - name: Run clang-format Check
        working-directory: ${{github.workspace}}
        run: ./bin/run-clang-format.sh check

      - name: Resolve Conan Dependencies and Configure CMake
        working-directory: ${{github.workspace}}
        run: ./bin/init-cmake-build.sh ${{env.BUILD_TYPE}}

      - name: Build
        working-directory: ${{github.workspace}}
        run: ./bin/run-scan-build.sh

      - name: Test
        working-directory: ${{github.workspace}}
        run: cmake --build ./build --target test

      - name: Run Example zero_copy=false
        working-directory: ${{github.workspace}}
        run: ./bin/run-example.sh 10000000 false

      - name: Run Example zero_copy=true
        working-directory: ${{github.workspace}}
        run: ./bin/run-example.sh 10000000 true

      - name: Run clang-tidy Checks
        working-directory: ${{github.workspace}}
        run: ./bin/run-clang-tidy.sh
